CHAPTER 1 : Retrieving Data Using the SQL SELECT Statement

1. DISPLAY ALL DATA OF DEPARTMENTS TABLE.
2. DISPLAY LAST_NAME AND SALARY COLUMNS OF EMPLOYEES TABLE.
3. DISPLAY CURRENT SALARY AND NEW SALARY AFTER INCREMENTING IT WITH RS.5000 WITH PROPER COLUMN HEADINGS.
4. DISPLAY FIRST_NAME , ANNUAL SALARY AND NEW ANNUAL SALARY AFTER INCREMENTING IT WITH RS.2000.
5. DISPLAY LAST_NAME AND FIRST_NAME IN SINGLE COLUMN WITH A SPACE IN BETWEEN WITH PROPER COLUMN HEADING.
6. DISPLAY NON-DUPLICATE DEPARTMENT_ID FROM EMPLOYEES TABLE.
7. DISPLAY ALL NON-DUPLICATE COMBINATIONS OF MANAGER_ID AND JOB_ID. (DON'T USE DISTINCT)
8. DISPLAY ROWID AND ALL COLUMNS OF REGIONS TABLE. (USING TABLE ALIAS)
9. DISPLAY SAMPLED RESULT FOR EACH ROW. SAMPLE-> King works as AD_PRES.
10. DISPLAY SAMPLED RESULT FOR EACH ROW. SAMPLE-> Steven's monthly salary is Rs.24000/-.(with and without quote operator)
11. DISPLAY FIRST_NAME , SALARY , COMMISSION_PCT AND COMMISSION AMOUNT WITH PROPER COLUMN HEADING.

CHAPTER 2 : Restricting and Sorting Data

1. DISPLAY ALL ROWS OF DEPARTMENTS TABLE IN ASCENDING ORDER OF DEPARTMENT_NAME.
2. DISPLAY DEPARTMENT_NAME (ALIAS DNM) AND LOCATION_ID FROM DEPARTMENTS TABLE IN DESCENDING ORDER OF FIRST    COLUMN. (DON'T USE COLUMN ALIAS OR COLUMN NAME IN ORDER BY CLAUSE)
3. DISPLAY DEPARTMENT_NAME (ALIAS DNM) AND LOCATION_ID FROM DEPARTMENTS TABLE IN ASCENDING ORDER OF    DEPARTMENT_NAME USING COLUMN ALIAS. MAKE COMMAND COMPLETELY READABLE.
4. DISPLAY DEPARTMENT_ID , JOB_ID , SALARY AND FIRST_NAME. SORT RESULT USING ALL COLUMNS. USE ALL 3 STYLES    COLUMN NAME , COLUMN NUMBER AND COLUMN ALIAS. USE BOTH ASC AND DESC. USE NULLS LAST.
5. GIVE EXAMPLE OF & SUBSTITUTION VAIRABLE.
6. GIVE EXAMPLE OF && SUBSTITUTION VARIABLE.
7. USE DEFINE AND DECLARE A VARIABLE NAMED CL. ASSIGN LAST_NAME , HIRE_DATE , SALARY TO IT. USE IT IN COMMAND.
8. USE DEFINE AND DECLARE A VARIABLE NAMED HRA. (DON'T USE ANY QUOTATION) ASSIGN SALARY * 12 / 15 * .33. USE IT IN COMMAND. RESULT MUST HAVE PROPER COLUMN HEADING.
9. DISPLAY ALL ROWS OF EMPLOYEES TABLE WHO GETS 11000 OR MORE SALARY.
10. DISPLAY ALL ROWS OF EMPLOYEES TABLE WHO WORKS AS ANY OF AD_VP, IT_PROG OR SA_REP. (DON'T USE IN)
11. DISPLAY ALL ROWS OF EMPLOYEES TABLE WHO WORKS OTHER THAN ANY OF AD_VP, IT_PROG OR SA_REP. (DON'T USE IN AS WELL AS LOGICAL OPERATORS)
12. DISPLAY ALL ROWS OF EMPLOYEES TABLE WHO WORKS AS ANY OF AD_VP, IT_PROG OR SA_REP. (USING IN)
13. DISPLAY ALL ROWS OF EMPLOYEES TABLE WHO WORKS OTHER THAN ANY OF AD_VP, IT_PROG OR SA_REP. (USING IN)
14. DISPLAY ALL ROWS OF EMPLOYEES TABLE WHO IS HIRED IN YEAR 99. (USING LOGICAL OPERATOR)
15. DISPLAY ALL ROWS OF EMPLOYEES TABLE WHO IS HIRED IN YEAR 99. (USING BETWEEN)
16. DISPLAY ALL ROWS OF EMPLOYEES TABLE WHO IS HIRED IN YEAR 99. (USING LIKE)
17. DISPLAY ALL ROWS OF EMPLOYEES TABLE WHO GETS COMMISSION. (ATLEAST 5 STYLES)
18. DISPLAY ALL STUDENTS WHO IS PASS IN ENGLISH SUBJECT. (TABLE NAME EXAM) PASSING MARKS 33
19. DISPLAY ALL STUDENTS WHO IS FAIL IN MATHS SUBJECT.
20. DISPLAY ALL STUDENTS WHOSE RESULT IS PASS.
21. DISPLAY ALL STUDENTS WHOSE RESULT IS FAIL.
22. DISPLAY ALL STUDENTS WHO IS PASS IN ENGLISH AND FAIL IN MATHS.
23. DISPLAY ALL STUDENTS WHO IS FAIL IN BOTH SUBJECTS.
24. DISPLAY ALL EMPLOYEES OF DEPARTMENT_ID 50 WITH JOB_ID ST_CLERK AND DEPARTMENT_ID 80 WITH JOB_ID SA_REP.
25. DISPLAY ALL FIRST_NAME WHOSE LENGTH IS UPTO 6 CHARACTERS. 
26. DISPLAY LAST_NAME AND HIRE_DATE OF THOSE WHO WERE HIRED EITHER IN JANUARY OR JUNE MONTH.
27. STATEMENT TRUE OR FALSE : SELECT 'SHRI' || 210 * 2 FROM DUAL;
28. WHAT WILL BE THE OUTPUT : SELECT 5 || 6 + 5 FROM DUAL;

CHAPTER 3 : Using Single Row Functions to Customize Output

1 DISPLAY LAST_NAME IN CAPITAL LATTERS.
2 DISPLAY FIRST_NAME IN SMALL LATTERS.
3 GIVE EXAMPLE WHERE STRING MUST BE DISPLAYED IN CAMEL CASE.
4 DISPLAY LAST_NAME , MANAGER_ID , HIRE_DATE IN SINGLE COLUMN. (DONT' USE ||)
5 DISPLAY SALARY WITH TOTAL LENGTH OF 12. USE #$ AS PADDING CHARACTERS. 
  PAD ON LEFT SIDE.
6 DISPLAY FIRST_NAME , FIRST_NAME WITH TOTAL LENGTH OF 7. USE ^ AS PADDING CHARACTERS. 
  PAD ON RIGHT SIDE.
7 DISPLAY HIRE_DATE AND ANOTHER HIRE_DATE COLUMN REMOVING ALL OCCURRENCES OF 9 AND 8 
  FROM RIGHT SIDE.
8 DISPLAY HIRE_DATE AND ANOTHER HIRE_DATE COLUMN REMOVING ALL OCCURRENCES OF 1 FROM 
  LEFT SIDE.
9 REMOVE ALL e FROM FIRST_NAME AND DISPLAY THE SAME.
10 FIND POSITION OF SECOND e FROM RIGHT IN FIRST_NAME AND PRINT THE SAME.
11 DISPLAY FIRST 4 CHARACTERS FROM FIRST_NAME.
12 DISPLAY LAST 3 CHARACTERS FROM LAST_NAME.
13 DISPLAY 3 CHARACTERS FROM 4th POSITION FROM FIRST_NAME.
14 DISPLAY JOB_ID AND IT'S LENGTH.
15 FIND REMAINDER OF 43 DIVIDED BY 5.
16 FIND HRA USING GIVEN FORMULA AND TRUNCATE THE VALUE IN TENS. HRA = SALARY * 2.5 / 3
17 FIND HRA USING GIVEN FORMULA AND ROUND THE VALUE IN THOUSAND. HRA = SALARY * 5 / 7.8
18 DISPLAY SERVER'S DATE AND CLIENT'S DATE.
19 FIND YOUR AGE IN DAYS.
20 FIND YOUR AGE IN MONTHS. (WITHOUT FRACTIONAL PART)
21 FIND YOUR AGE IN YEARS COMPLETED.
22 COMPANY PAYS WEEKLY ON EVERY THURSDAY. FIND FIRST SALARY DATE FOR EACH EMPLOYEE.
23 COMPANY PAYS ON LAST DAY OF EACH MONTH. FIND SECOND SALARY DATE FOR EACH EMPLOYEE.
24 COMPANY PAYS ON FIRST DAY OF NEXT MONTH. FIND FIRST SALARY DATE FOR EACH EMPLOYEE.
25 COMPANY PAYS INCREMENT QUATERLY FIND FIRST INCREMENT DATE.

CHAPTER 4 : Using Conversion Functions and Conditional Expressions

1 DISPLAY SERVER'S DATE USING SPECIFIED FORMAT 20-FEBRUARY-2018 Tuesday
2 DISPLAY CLIENT MACHINE'S DATE USING SPECIFIED FORMAT 24-Feb-18 10:32.45 am 
  (DON'T USE CONVERSION FUNCTION)
3 FIND AGE DIFFERENCE IN DAYS FOR YOU AND YOUR MOTHER.
4 DISPLAY SALARY IN SPECIFIED FORMAT : Rs.24,000.00 (DON'T USE ALTER SESSION)
5 DISPLAY SALARY IN SPECIFIED FORMAT : Rs.24,000.00 (DON'T USE CONVERSION FUNCTION)
6 DISPLAY SALARY IN SPECIFIED FORMAT : Rs.24,000.00 (USE 3 PARAMETERS IN CONVERSION FUNCTION)
7 DISPLAY ALL NLS PARAMETER VALUES.
8 CHANGE GROUP AND DECIMAL SEPARATERS TO !~
9 DISPLAY SALARY IN SPECIFIED FORMAT : ^24~000!00
10 DISPLAY SYSDATE AND DAY NUMBER OF WEEK.
11 DISPLAY CURRENT DATE AND DAY NUMBER OF YEAR.
12 DISPLAY SYSDATE AND ABBREVIATED AS WELL AS FULL MONTH NAME LIKE : Jul , JULY
13 DISPLAY SECOND OF THE DAY.
14 CHANGE SYSTEM TIME TO 2:30PM (USING OS)
15 DISPLAY TIME USING SPECIFIED FORMAT : 14:30.24
16 DISPLAY TIME USING SPECIFIED FORMAT : 2:20.56PM
17 DISPLAY DATE AND TIME INFO. USING SPECIFIED FORMAT : 20-FEBRUARY-2018 Tuesday 14:30Pm
18 DISPLAY CURRENT MACHINE'S DATE AND QUARTER VALUE. DISPLAY QUARTER AS HEADING.
19 DISPLAY DATE IN SPECIFIED FORMAT : 20th February Two Thousand Eighteen
20 DISPLAY DATE IN SPECIFIED FORMAT : Twentieth February Twenty Eighteen
21 DISPLAY DATE IN SPECIFIED FORMAT : Today is 15th January Two Thousand Eighteen, Tuesday
22 DISPLAY SALARY IN SPECIFIED FORMAT : 08,000.00
23 TAKE INPUT FROM USER AND DISPLAY LIKE THIS : FOR NEGATIVE NUMBER : <98*45>
24 TAKE INPUT FROM USER AND DISPLAY LIKE THIS : FOR NEGATIVE NUMBER : [98~345^45]
25 DISPLAY SALARY IN SPECIFIED FORMAT : 2.40E+04
26 TAKE INPUT FROM USER AND DISPLAY IT BY CONVERTING IT TO LACS.
GENERAL FUNCTIONS
27 CHANGE NULL COMMISSION PCT TO .15 AND DISPLAY ORIGINAL AND NEW COMMISSION PCT.
28 GIVE .12 COMMISSION WHO DOESN'T GET ANY AND ADD .15 COMMISSION FOR THEM WHO GETS 
   COMMISSION PCT.
29 COMPARE 5TH POSITION CHARACTER OF FIRST_NAME AND LAST_NAME. DISPLAY 5TH LATTER OF
   LAST_NAME IF BOTH ARE NOT EQUAL. DISPLAY = SYMBOLE IF BOTH ARE SAME.
30 DISPLAY NAME AND NEW COLUMN WHICH WILL DISPLAY SINGLE CONTACT NO. 
31 DISPLAY LAST_NAME , DEPARTMENT_ID , COMMISSION_PCT AND NEW COMMISSION PCT.
   (DON'T USE CASE)
   (FOR DEPARTMENT_ID 50 , NEW COMMISSION PCT WILL BE .25
                      90                              .33
                     110                              .42
    FOR OTHER NO COMMISSION.
32 DISPLAY LAST_NAME , DEPARTMENT_ID , SALARY AND NEW SALARY. (INCREMENT SALARY ON
   THE BASES OF JOB_ID. IF JOB_ID = AD_VP 40% INCREMENT,
                                  = SA_REP 30%
                                  = MK_MAN 15%
                                  = IT_PROG 22%
   FOR REMAINING 17%. (DON'T USE DECODE)
33 DISPLAY FIRST_NAME , SALARY , NEW SALARY. INCREMENT WILL BE LIKE.
   IF SALARY IS IN THE RANGE OF 0-7000 THEN 30%
                                7001-12000 THEN 25%
                                NO INCREMENT FOR OTHERS.




CHAPTER 5 : Reporting Aggregated Data Using the Group Functions

1. FIND HIGHEST SALARY FIGURE PAID TO EMPLOYEE.
2. FIND NO. OF EMPLOYEES WORKING IN COMPANY.
3. FIND AVERAGE SALARY PAID TO IT_PROG.
4. FIND NO. OF EMPLOYEES WORKING IN DEPARTMENT_ID 90.
5. FIND SUM OF SALARY PAID FOR SPECIFIED JOBS (IT_PROG,SA_REP,AD_VP)
6. FIND HOW MANY EMPLOYEES WHERE HIRED BETWEEN YEAR 85 AND 90.
7. FIND HIGHEST AND LOWEST SALARY PAID TO EACH JOB_ID. ADDITIONALLY DISPLAY DIFFERENCE.
8. FIND TOTAL NO. OF EMPLOYEES, UNIQUE DEPARTMENT_ID.
9. FIND SUM OF SALARY WHO WORKS IN DEPARTMENT_ID 90,50,110.
10. FIND AVERAGE OF SALARY WHO REPORT TO MANAGERS 100, 105, 110.
11. DISPLAY AVERAGE SALARY DEPARTMENT_ID WISE, JOB_ID WISE.
12. FIND AVERAGE SALARY FOR THOSE WHOSE SALARY IS UPTO 10000.
13. COUNT NO. OF EMPLOYEES WHO HAS LATTER e IN THEIR FIRST_NAME.
14. DISPLAY DEPARTMENT_ID AND COUNT OF EMPLOYEES. INCLUDE ONLY THOSE DEPARTMENT_ID WHICH EMPLOYS MORE THAN 2 EMPLOYEES.
15. COUNT THOSE EMPLOYEES WHO WORKS AS IT_PROG WITH SALARY UPTO 10000.
16. FIND AVERAGE OF SUM OF SALARY DEPARTMENT_ID WISE.
17. FIND AVERAGE OF MIN OF SALARY JOB_ID WISE.
18. FIND COUNT OF UNIQUE MANAGER_ID.
19. FIND DEPARTMENT_ID WISE, LOWEST SALARY, HIGHEST SALARY FOR ALL OTHER THAN IT_PROG AND SA_REP. DISPLAY ONLY THOSE ROWS WHICH HAS HIGHEST SALARY GREATER THAN 8000.
20. FIND JOB_ID WISE NO. OF EMPLOYEES FOR ALL OTHER THAN DEPARTMENT_ID 90 , 110. DISPLAY ONLY THOSE ROWS WHICH HAS COUNT LESS THAN 3.

CHAPTER 6 : Displaying Data from Multiple Tables Using Joins

1 DISPLAY ALL COLUMNS OF REGIONS AND COUNTRIES TABLE.
2 DISPLAY COUNTRY_NAME AND IT'S CORRESPONDING CITY.
3 DISPLAY DEPARTMENT_NAME AND IT'S CORRESPONDING STATE_PROVINCE.
4 DISPLAY LAST_NAME AND DEPARTMENT_NAME. (USE USING CLAUSE)
5 DISPLAY LAST_NAME AND DEPARTMENT_NAME. (DON'T USE USING CLAUSE)
6 DISPLAY FIRST_NAME , SALARY , GRADE_LEVEL.
7 DISPLAY EMPLOYEE'S LAST_NAME AND IT'S MANAGER'S LAST_NAME.
8 DISPLAY EMPLOYEE'S FIRST_NAME, SALARY , MANAGER'S FIRST_NAME AND SALARY.
9 DISPLAY ALL COMBINATIONS OF REGION_NAME AND COUNTRY_NAME.
10 DISPLAY ALL COMBINATIONS OF REGION_NAME AND FIRST_NAME.
11 DISPLAY ONLY THOSE EMPLOYEE'S FIRST_NAME AND DEPARTMENT_NAME WHO REPORTS TO IT'S DEPARTMENT HEAD.
12 DISPLAY FIRST_NAME AND DEPARTMENT_NAME INCLUDING EXTRA FIRST_NAME.
13 DISPLAY FIRST_NAME AND DEPARTMENT_NAME INCLUDING EXTRA DEPARTMENT_NAME.
14 DISPLAY FIRST_NAME AND DEPARTMENT_NAME INCLUDING EXTRA FIRST_NAME AND DEPARTMENT_NAME.
15 DISPLAY ALL FIRST_NAME AND HIRE_DATE WHO HAS HIRED AFTER Hartstein.
16 DISPLAY ALL LAST_NAME AND SALARY WHO GETS HIGHER SALARY THAN Abel.
17 DISPLAY EMPLOYEE'S FIRST_NAME AND HIS COLLEGUE NAME. (EMPLOYEES OF SAME DEPARTMENT ARE COLLEGUE.)
18 DISPLAY FIRST_NAME , DEPARTMENT_NAME WHO GETS HIGHER SALARY THAN Diana.
19 DISPLAY FIRST_NAME , SALARY , GRADE_LEVEL OF EMPLOYEE AND HIS MANAGER.
20 DISPLAY DEPARTMENT_NAME , CITY , COUNTRY_NAME.
21 DISPLAY FIRST_NAME , DEPARTMENT_NAME ,  CITY , COUNTRY_NAME AND REGION_NAME.
22 DISPLAY FIRST_NAME , DEPARTMENT_NAME OF EMPLOYEE AND HIS MANAGER.
23 DISPLAY FIRST_NAME , CITY.
24 DISPLAY FIRST_NAME , COUNTRY_NAME.
25 DISPLAY FIRST_NAME , REGION_NAME.
26 DISPLAY FIRST_NAME , CITY OF EMPLOYEE AND HIS MANAGER.

CHAPTER 7 : Using Subquery to Solve a Problem

1 DISPLAY FIRST_NAME AND SALARY OF THE EMPLOYEE WHO GETS HIGHEST SALARY.
2 DISPLAY LAST_NAME AND HIRE_DATE OF THE EMPLOYEE WHO HIRED FIRST IN COMPANY.
3 DISPLAY FIRST_NAME AND SALARY OF THE EMPLOYEES WHO GET HIGHER SALARY THAN THE AVERAGE SALARY OF COMPANY.
4 DISPLAY FIRST_NAME AND SALARY OF THE EMPLOYEES WHO GETS HIGHER SALARY THAN Abel.
5 DISPLAY LAST_NAME AND HIRE_DATE OF THE EMPLOYEES WHO IS HIRED BEFORE Hartstein.
6 DISPLAY FIRST_NAME AND DEPARTMENT_NAME WHO WORKS IN SALES DEPARTMENT.
7 DISPLAY LAST_NAME AND MANAGER_ID WHO REPORTS TO King.
8 DISPLAY ALL THE DEPARTMENT_NAME WHICH ARE LOCATED IN Seattle.
9 DISPLAY ALL COUNTRY_NAME WHICH ARE LOCATED IN Americas REGION.
10 DISPLAY DEPARTMENT_ID , FIRST_NAME AND SALARY OF THOSE WHO GETS LOWEST SALARY IN THEIR DEPARTMENTS.
11 DISPLAY JOB_ID , HIRE_DATE AND LAST_NAME OF THOSE EMPLOYEES WHO ARE HIRED LAST FOR THEIR JOB.
12 DISPLAY ROWS OF TABLE IN THE REVERSE ORDER OF IT'S DEFAULT ORDER.
13 DISPLAY 5th, 6th AND 7th ROWS OF THE TABLE.
14 FIND THE 3rd HIGHEST SALARY FIGURE.
15 FIND THE 5th EARLIEST HIRE_DATE.
16 DISPLAY THE LAST_NAME AND SALARY OF THE EMPLOYEE WHO GETS 4th HIGHEST SALARY.
17 DISPLAY THE FIRST_NAME AND HIRE_DATE OF THE EMPLOYEE WHO IS HIRED 4th LAST IN THE COMPANY.
18 DISPLAY THE DEPARTMENT_ID AND AVERAGE SALARY OF THOSE DEPARTMENT WHICH IS PAID HIGHEST AVERAGE SALARY.
19 DISPLAY THE JOB_ID AND NO. OF EMPLOYEES FOR THE JOB, FOR WHICH LOWEST NO. OF EMPLOYEES WORKS IN THE COMPANY.
20 DISPLAY FIRST_NAME , DEPARTMENT_ID , SALARY AND HIGHEST SALARY PAID TO THE CORRESPONDING DEPARTMENT_ID.
21 DISPLAY LAST_NAME , JOB_ID , SALARY AND LOWEST SALARY PAID FOR THE CORRESPONDING JOB_ID.
22 DISPLAY LAST_NAME WHO WORKS AT Seattle.
23 DISPLAY FIRST_NAME WHO RESIDES IN Canada.
24 DISPLAY LAST_NAME WHO RESIDES IN Americas.


CHAPTER 8 :Using the Set Operators

1 DISPLAY ALL JOBS INCLUDING DUPLICATE FOR DEPARTMENT 20 AND 30.
2 DISPLAY ALL DISTINCT JOBS FOR WHICH EMPLOYEES ARE HIRED IN BOTH DEPARTMENT 10 AND 30.
3 DISPLAY ALL DEPARTMENT_NAME AND CITY IN SINGLE COLUMN (ONE ABOVE THE OTHER) WITH PROPER COLUMN HEADING.
4 DISPLAY ONLY THOSE JOBS FOR WHICH EMPLOYEES ARE HIRED IN DEPARTMENT 30 BUT NOT FOR REMAINING DEPARTMENTS.
5 DISPLAY ALL JOBS OF DEPARTMENT 10 AND 20 WHICH ARE NOT PRESENT IN DEPARTMENT 30.
6 DISPLAY ONLY THOSE JOBS FOR WHICH COMPANY HAS HIRED EMPLOYEES ON BOTH YEARS 1990 AND 1999.
7 DISPLAY THOSE JOBS FOR WHICH COMPANY HAS HIRED EMPLOYEES IN BOTH 1996 AND 1998 BUT NOT IN 1999.
8 DISPLAY STAFF, SUBJECT AND COLUMN NAMED CAN. WHICH SHOULD DISPLAY YES OR NO, BASED ON STAFF CAN TEACH THE SUBJECT OR    NOT.
9 DISPLAY JOB_ID AND SUM OF SALARY PAID TO EACH JOB AND DEPARTMENT_ID AND NO. EMPLOYEES WORKS FOR EACH DEPARTMENT ONE    ABOVE THE ANOTHER IN SINGLE RESULT SET. SORT RESULT ON LAST COLUMN.
10 DEVELOP ENAME AND EMPNO AS FIRST RESULT SET. DNAME AS SECOND RESULT SET AND CLUB BOTH VERTICALLY.
11 DEVELOP DEPARTMENT_ID AND DEPARTMENT_NAME AS FIRST RESULT SET. FIRST_NAME AND DEPARTMENT_ID AS SECOND RESULT SET.       DISPLAY THEM AS SINGLE RESULT SET.
