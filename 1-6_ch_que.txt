

1.DISPLAY FIRST_NAME , JOB_ID , SALARY , NEW_SALARY (INCREMENT FOR JOB_ID ST_CLERK 20% , FOR SA_REP 10% , FOR AD_VP 15% , NO INCREMENT FOR OTHERS) *
ANS-> SELECT FIRST_NAME , JOB_ID , SALARY ,
      DECODE(JOB_ID,'ST_CLERK',(SALARY + SALARY * .20),
               'SA_REP',(SALARY + SALARY * .10),
               'AD_VP',(SALARY + SALARY * .15),
                           SALARY) NEW_SALARY
      FROM EMPLOYEES;

2.DISPLAY DATE IN SPECIFIED FORMAT : 24th May, 2021
ANS->  SELECT TO_CHAR(SYSDATE,'DDth Mon, YYYY') FROM DUAL;

3.DISPLAY EMPLOYEE'S FIRST_NAME , SALARY , GRADE_LEVEL WITH MANAGER'S FIRST_NAME, SALARY, GRADE_LEVEL  
ANS-> SELECT E.FIRST_NAME EMP_NM,JE.JOB_TITLE EMP_JOB,E.SALARY EMP_SAL,EG.GRADE_LEVEL EMP_GLEV,M.FIRST_NAME MAN_NM,JM.JOB_TITLE MAN_JOB,M.SALARY MAN_SAL,MG.GRADE_LEVEL MAN_GLEV
FROM EMPLOYEES E
JOIN EMPLOYEES M ON E.MANAGER_ID=M.EMPLOYEE_ID
JOIN JOBS JE ON E.JOB_ID=JE.JOB_ID
JOIN JOBS JM ON M.JOB_ID=JM.JOB_ID
JOIN JOB_GRADES EG ON E.SALARY BETWEEN EG.LOWEST_SAL AND EG.HIGHEST_SAL
JOIN JOB_GRADES MG ON M.SALARY BETWEEN MG.LOWEST_SAL AND MG.HIGHEST_SAL;

4.DISPLAY ALL LAST_NAME AND SALARY WHO GETS HIGHER SALARY THAN Abel. 
ANS->  SELECT LAST_NAME  FROM EMPLOYEES WHERE SALARY > (SELECT SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Abel');

5.DISPLAY ALL ROWS OF EMPLOYEES TABLE WHO IS HIRED IN YEAR 99. (USING LOGICAL OPERATOR) 
ANS->  SELECT * FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '01-JAN-99' AND '31-DEC-99';
      
6.DISPLAY NON-DUPLICATE DEPARTMENT_ID AND JOB_ID COMBINATION
ANS-> SELECT DISTINCT DEPARTMENT_ID , JOB_ID FROM EMPLOYEES GROUP BY DEPARTMENT_ID , JOB_ID;

7.DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME , SALARY , GRADE_LEVEL , JOB_ID , JOB_TITLE
ANS->  SELECT FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME , SALARY,GRADE_LEVEL,J.JOB_ID,JOB_TITLE
       FROM EMPLOYEES E
       JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
       JOIN LOCATIONS L ON L.LOCATION_ID=D.LOCATION_ID
       JOIN COUNTRIES C ON C.COUNTRY_ID =L.COUNTRY_ID
       JOIN REGIONS R ON R.REGION_ID=C.REGION_ID
       JOIN JOBS J ON J.JOB_ID=E.JOB_ID
       JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL;

8.DISPLAY HIGHEST NO. OF EMPLOYEES WORKING FOR DEPARTMENT_ID. 
ANS->SELECT DEPARTMENT_ID , COUNT(*) FROM EMPLOYEES GROUP BY DEPARTMENT_ID ORDER BY 2 DESC  FETCH FIRST 1  ROWS ONLY;

9.DISPLAY ALL SALARY IN SPECIFIED FORMAT : ^24~000!00 
ANS-> ALTER SESSION SET NLS_CURRENCY = '^';
      ALTER SESSION SET NLS_NUMERIC_CHARACTERS = '!~';
      SELECT SALARY , TO_CHAR(SALARY,'l90G909D99') from employees;

10.DISPLAY ROWID AND ALL COLUMNS OF REGIONS TABLE. (USING TABLE ALIAS AND META CHARACTER) 
ANS->SELECT R.*,R.ROWID FROM REGIONS R;

11.DISPLAY EMPLOYEE'S FIRST_NAME AND SALARY WITH MANAGER'S FIRST_NAME AND SALARY
ANS-> SELECT E.FIRST_NAME EMP_NM,M.FIRST_NAME MAN_NM,E.SALARY EMP_SAL,M.SALARY MAN_SAL
      FROM EMPLOYEES E
      JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID;

12.FIND DEPARTMENT_ID WISE, LOWEST SALARY, HIGHEST SALARY FOR ALL OTHER THAN IT_PROG AND SA_REP. DISPLAY ONLY THOSE ROWS WHICH HAS HIGHEST SALARY GREATER THAN 8000. 
ANS-> SELECT DEPARTMENT_ID, MIN(SALARY) LOWEST_SAL, MAX(SALARY) HIGHEST_SAL FROM EMPLOYEES WHERE JOB_ID NOT IN ('IT_PROG','SA_REP') GROUP BY DEPARTMENT_ID HAVING
      MAX(SALARY) IN (SELECT MAX(SALARY) FROM EMPLOYEES GROUP BY SALARY HAVING MAX(SALARY) > 8000);


13.DISPLAY ALL EXCEPT THOSE WHO REPORTS TO MANAGER_ID 100 , 124 AND 149.
ANS-> SELECT * FROM EMPLOYEES WHERE MANAGER_ID NOT IN (100,124,149);

14.DISPLAY FIRST_NAME , REGION_NAME. 
ANS-> SELECT FIRST_NAME , REGION_NAME FROM EMPLOYEES
      JOIN DEPARTMENTS USING(DEPARTMENT_ID)
      JOIN LOCATIONS USING(LOCATION_ID)
      JOIN COUNTRIES USING (COUNTRY_ID)
      JOIN REGIONS USING (REGION_ID);

15.DISPLAY ALL HIRE_DATE WITH LOWER 'j' INSTEAD OF CAPITAL 'J' 
ANS-> SELECT HIRE_DATE , TRANSLATE(HIRE_DATE,'J','j') FROM EMPLOYEES ;

16.DISPLAY FIRST_NAME , JOB_TITLE
ANS-> SELECT FIRST_NAME,JOB_TITLE
      FROM EMPLOYEES
      JOIN DEPARTMENTS USING (DEPARTMENT_ID)
      JOIN LOCATIONS USING (LOCATION_ID)
      JOIN COUNTRIES USING (COUNTRY_ID)
      JOIN REGIONS USING (REGION_ID)
      JOIN JOBS USING (JOB_ID);

17.DISPLAY THOSE WHO WORKS IN DEPARTMENT_ID 80 OR 90 AND GETS SALARY LESS THAN 10000. 
ANS-> SELECT DEPARTMENT_ID,SALARY FROM EMPLOYEES WHERE DEPARTMENT_ID IN (80,90) GROUP BY DEPARTMENT_ID,SALARY HAVING SALARY < 10000;

18.DISPLAY GIVEN RESULT FOR EACH EMPLOYEE : King's monthly salary is Rs.24000 (TWO STYLES USING 'Q' OPERATOR AND WITHOUT USING 'Q' OPERATOR ) 
ANS->SELECT LAST_NAME ||'''s monthly salary is Rs.'||SALARY "EMPLOYEES INFO" FROM EMPLOYEES;
     SELECT LAST_NAME||Q'$'s monthly salary is Rs.$' || SALARY "EMPLOYEES INFO" FROM EMPLOYEES;

19.DISPLAY EACH MANAGER_ID AND NO. OF EMPLOYEES REPORTING TO THEM. 
ANS-> SELECT MANAGER_ID, COUNT(*) FROM EMPLOYEES GROUP BY MANAGER_ID;

20.DISPLAY FIRST_NAME AND NO. OF COMPLETED MONTHS HE HAS BEEN WORKING FOR COMPANY. 
ANS->SELECT FIRST_NAME , TRUNC(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)) FROM EMPLOYEES;