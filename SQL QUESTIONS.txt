CHAPTER 1:

1 DISPLAY ALL DATA OF EMPLOYEES TABLE
2 DISPLAY ALL DATA OF DEPARTMENTS TABLE
3 DISPLAY FIRST_NAME OF EMPLOYEES TABLE
4 DISPLAY LAST_NAME AND HIRE_DATE OF EMPLOYEES TABLE
5 DISPLAY FIRST_NAME , SALARY AND NEW SALARY (NEW SALARY = SALARY + 1500)
6 DISPLAY LAST_NAME , SALARY AND ANNUAL SALARY (ANNUAL SALARY = SALARY * 12)
7 DISPLAY FIRST_NAME AND LAST_NAME IN SINGLE COLUMN
8 DISPLAY NON-DUPLICATE JOB_ID (TWO STYLES)
9 DISPLAY RESULT OF 456 * 67 (SINGLE TIME, USING TWO STYLES)
10 DISPLAY GIVEN RESULT FOR EACH EMPLOYEE : Steven works as AD_VP.
11 DISPLAY GIVEN RESULT FOR EACH EMPLOYEE : King's monthly salary is Rs.24000 (TWO STYLES)
12 DISPLAY ALL INFO. OF DEPARTMENTS TABLE WITH ROWID
13 DISPLAY ALL INFO. OF EMPLOYEES TABLE WITH ANNUAL SALARY (ANNUAL SALARY = SALARY * 12)
14 DISPLAY FIRST_NAME , NEW_ANNUAL_SALARY (NEW_ANNUAL_SALARY = SALARY + 1000 * 12)
15 DISPLAY NON-DUPLICATE DEPARTMENT_ID AND JOB_ID COMBINATION


CHAPTER 2:
1 DISPLAY FIRST 4 ROWS OF EMPLOYEES TABLE
2 DISPLAY 5 ROWS STARTING FROM 11 FROM EMPLOYEES TABLE
3 DISPLAY FIRST_NAME , DEPARTMENT_ID , SORT ROWS ON DEPARTMENT_ID , DISPLAY FIRST 5 ROWS, IT SHOULD INCLUDE ALL DATE WITH TIE.
4 DISPLAY FIRST_NAME , COMMISSION_PCT, SORT ROWS ON SECOND COLUMN KEEP ALL NULL VALUES AT THE TOP.
5 DISPLAY DEPARTMENT_ID , JOB_ID , SALARY. SORT ON ALL 3 COLUMNS. USE ASC , DESC AND NULLS FIRST.
6 DEFINE A VARIABLE HRA AND USE IT IN SELECT STATEMENT.
7 GIVE EXAMPLE OF INTERACTIVE COMMAND, WHICH WILL ASK FOR VARIABLE VALUE EACH TIME WE EXECUTE IT.
8 DISPLAY FIRST_NAME , SALARY FOR THOSE WHO GETS HIGHER SALARY THAN 10000.
9 DISPLAY ALL EXCEPT THOSE WHO WORKS IN DEPARTMENT_ID 50
10 DISPLAY ALL WHO WORKS AS IT_PROG , AD_VP , SA_REP.
11 DISPLAY ALL EXCEPT THOSE WHO REPORTS TO MANAGER_ID 100 , 124 AND 149.
12 DISPLAY THOSE WHO GETS SALARY IN THE RANGE OF 6000 AND 11000.
12 DISPLAY THOSE FIRST_NAME WHICH CONTAINS 'e' TWO TIMES.
13 DISPLAY THOSE WHO WORKS IN DEPARTMENT_ID 80 OR 90 AND GETS SALARY LESS THAN 10000.
14 DISPLAY THOSE WHO DOESN'T GET COMMISSION.
15 DISPLAY ALL WHO WORKS IN DEPT 50 AS ST_CLERK AND IN 80 AS SA_REP.

CHAPTER 3:
1 DISPLAY FIRST_NAME IN CAPITAL ALPHABETS
2 DISPLAY EMAIL IN SMALL ALPHABETS
3 DISPLAY FIRST_NAME AND HIRE_DATE UNDER SINGLE HEADING (DON'T USE ||)
4 DISPLAY SALARY WITH 12 LENGTH, PAD IT WITH *# ON LEFT
5 DISPLAY HIRE_DATE BY REMOVING ALL COMBINATIONS OF 9 AND 8 FROM RIGHT SIDE
6 DISPLAY FIRST 2 CHARACTERS OF FIRST_NAME
7 DISPLAY ALL HIRE_DATE WITH LOWER 'j' INSTEAD OF CAPITAL 'J'
8 DISPLAY ALL HIRE_DATE WITH LOWER 'aug' INSTEAD OF CAPITAL 'AUG'
9 REMOVE ALL e AND E FROM FIRST_NAME
10 COMPANY PAYS ON LAST DATE OF MONTH, FIND FIRST SALARY DATE FOR EACH EMPLOYEE
11 COMPANY PAYS ON EACH FRIDAY, FIND FIRST SALARY DATE FOR EACH EMPLOYEE
12 DISPLAY FIRST_NAME AND NO. OF MONTHS HE HAS BEEN WORKING FOR COMPANY.
13 DISPLAY CUBE OF 7 (SINGLE TIME ONLY, USING TWO STYLES)
14 GIVE EXAMPLE OF TRUNC AND ROUND, THE RESULT OF BOTH MUST BE DIFFERENT.
15 FIND POSITION OF SECOND 'e' IN FIRST_NAME

CHAPTER 4 :
1 DISPLAY FIRST_NAME , COMMISSION_PCT AND NEW COMMISSION PCT (REPLACE ALL NULL WITH 0(ZERO) IN NEW COMMISSION PCT COLUMN)
2 DISPLAY LAST_NAME , COMMISSION_PCT AND NEW COMMISSION PCT (DISPLAY ZERO FOR THOSE WHO DON'T GET COMM, ADD .1 FOR THOSE WHO GETS COMM)
3 GIVE EXAMPLE OF NULLIF FUNCTION.
4 USING CONTACTNO TABLE, GIVE EXAMPLE OF COALESCE FUNCTION.
5 DISPLAY FIRST_NAME , SALARY , NEW_SALARY (NEW_SALARY = SALARY + 1500)
6 DISPLAY LAST_NAME , SALARY , NEW_SALARY (NEW_SALARY = SALARY * 1.20)
7 DISPLAY FIRST_NAME , DEPARTMENT_ID , SALARY , NEW_SALARY (INCREMENT FOR DEPT 90 +500 , FOR 80 +1000 , FOR 60 +1500 , FOR REMAINING +2000)
8 DISPLAY FIRST_NAME , JOB_ID , SALARY , NEW_SALARY (INCREMENT FOR JOB_ID IT_CLERK 20% , FOR SA_REP 10% , FOR AD_VP 15% , NO INCREMENT FOR OTHERS)
9 DISPLAY ALL INFORMATION OF NLS PARAMETERS.
10 CHANGE CURRENCY SYMBOL TO Rs.
11 CHANGE GROUP SEPARATOR TO # AND DECIMAL SEPARATOR TO |
12 DISPLAY DATE IN SPECIFIED FORMAT : 24th May, 2021
13 DISPLAY SALARY IN 09,000.00$
14 DISPLAY CURRENT SECOND OF THE DAY
15 DISPLAY TIME INFORMATION OF SERVER.

CHAPTER 5:
1 DISPLAY HIGHEST SALARY
ans->SELECT MAX(SALARY) FROM EMPLOYEES;

2 DISPLAY LOWEST HIRE_DATE
ANS->SELECT MIN(HIRE_DATE) FROM EMPLOYEES;

3 DISPLAY EACH DEPARTMENT_ID AND IT'S AVERAGE SALARY.
ANS->SELECT DEPARTMENT_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

4 DISPLAY EACH JOB_ID AND COUNT/NO. OF EMPLOYEES WORKING IN IT.
ANS->SELECT JOB_ID,COUNT(JOB_ID) FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' GROUP BY JOB_ID;

5 DISPLAY LOWEST SALARY AND HIGHEST SALARY DEPARTMENT_ID WISE AND JOB_ID WISE
ANS->SELECT DEPARTMENT_ID , MIN(SALARY) , JOB_ID , MAX(SALARY) FROM EMPLOYEES GROUP BY JOB_ID , DEPARTMENT_ID;

6 DISPLAY COUNT OF EMPLOYEES WHO GETS SALARY 11000 AND MORE.
ANS-> SELECT COUNT(*) FROM EMPLOYEES WHERE SALARY >=11000;

7 DISPLAY TOTAL COUNT OF EMPLOYEES WHO WERE HIRED IN YEAR 98 AND 99.
ANS->SELECT COUNT(*) FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '01-JAN-98' AND '31-DEC-99';

8 DISPLAY TOTAL OF SALARY PAID TO ALL ST_CLERK.
ANS-> SELECT JOB_ID , SUM(SALARY) FROM EMPLOYEES WHERE JOB_ID ='ST_CLERK' GROUP BY JOB_ID;

9 DISPLAY EACH MANAGER_ID AND NO. OF EMPLOYEES REPORTING TO THEM.
ANS-> SELECT  MANAGER_ID, COUNT(*) FROM EMPLOYEES GROUP BY MANAGER_ID;

10 DISPLAY JOB_ID AND LOWEST SALARY FOR EACH JOB_ID. EXCLUDE THOSE WHEN LOWEST SALARY IS HIGHER THAN 10000.
ANS->SELECT JOB_ID , MIN(SALARY) FROM EMPLOYEES WHERE SALARY<=10000 GROUP BY JOB_ID;

11 DISPLAY LOWEST AVERAGE SALARY FOR JOB_ID.
ANS-> SELECT MIN(AVG(SALARY))FROM EMPLOYEES GROUP BY JOB_ID;

12 DISPLAY HIGEST NO. OF EMPLOYEES WORKING FOR DEPARTMENT_ID.
ANS->SELECT MIN(DEPARTMENT_ID),COUNT(*) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

13 DISPLAY COUNT OF DISTINCT JOB_ID.
ANS->  SELECT COUNT(JOB_ID),JOB_ID FROM EMPLOYEES GROUP BY JOB_ID;

14 DISPLAY COUNT OF ONLY THOSE WHO GETS COMMISSION_PCT.
ANS-> SELECT COUNT(COMMISSION_PCT) FROM EMPLOYEES ;

15 DISPLAY HIGHEST COMMISSION AMOUNT (COMMISSION AMOUNT = SALARY * COMMISSION_PCT)
ANS->SELECT MIN(SALARY * COMMISSION_PCT) "COMMISSION AMOUNT" FROM EMPLOYEES;

 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> CHAPTER 6: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

1 DISPLAY DEPARTMENT_NAME , CITY
ANS-> SELECT DEPARTMENT_NAME,CITY
      FROM LOCATIONS
      NATURAL JOIN DEPARTMENTS;

2 DISPLAY CITY , COUNTRY_NAME
ANS-> SELECT CITY,COUNTRY_NAME
      FROM COUNTRIES
      NATURAL JOIN LOCATIONS;

3 DISPLAY DEPARTMENT_NAME , CITY , COUNTRY_NAME
ANS-> SELECT DEPARTMENT_NAME,CITY,COUNTRY_NAME
      FROM DEPARTMENTS
      NATURAL JOIN COUNTRIES
      NATURAL JOIN LOCATIONS;

4 DISPLAY DEPARTMENT_NAME , REGION_NAME
ANS->  SELECT DEPARTMENT_NAME , REGION_NAME FROM DEPARTMENTS
       JOIN LOCATIONS USING(LOCATION_ID)
       JOIN COUNTRIES USING (COUNTRY_ID)
       JOIN REGIONS USING (REGION_ID);


5 DISPLAY FIRST_NAME , DEPARTMENT_NAME (USE USING)
ANS-> SELECT  FIRST_NAME , DEPARTMENT_NAME
      FROM EMPLOYEES
      INNER JOIN DEPARTMENTS USING (DEPARTMENT_ID);

6 DISPLAY FIRST_NAME , DEPARTMENT_NAME (USE ON)
ANS-> SELECT FIRST_NAME,DEPARTMENT_NAME
      FROM EMPLOYEES
      INNER  JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

7 DISPLAY FIRST_NAME , DEPARTMENT_NAME , DEPARTMENT_ID , MANAGER_ID (USE USING)
ANS-> SELECT  FIRST_NAME , DEPARTMENT_NAME , DEPARTMENT_ID , MANAGER_ID
      FROM EMPLOYEES
      INNER JOIN DEPARTMENTS USING (DEPARTMENT_ID,MANAGER_ID);


8 DISPLAY FIRST_NAME , DEPARTMENT_NAME , DEPARTMENT_ID , MANAGER_ID (USE ON)
ANS-> SELECT FIRST_NAME , DEPARTMENT_NAME , EMPLOYEES.DEPARTMENT_ID , EMPLOYEES.MANAGER_ID
      FROM EMPLOYEES
      INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;


9 DISPLAY FIRST_NAME , DEPARTMENT_NAME (DISPLAY ADDITIONAL ROWS OF EMPLOYEES TABLE)
ANS-> SELECT FIRST_NAME , DEPARTMENT_NAME
      FROM EMPLOYEES
      NATURAL JOIN DEPARTMENTS;

10 DISPLAY EMPLOYEE'S FIRST_NAME , MANAGER'S FIRST_NAME
ANS-> SELECT E.FIRST_NAME,M.FIRST_NAME
      FROM EMPLOYEES E
      JOIN EMPLOYEES M ON E.MANAGER_ID=M.EMPLOYEE_ID;

11 DISPLAY FIRST_NAME , SALARY , GRADE_LEVEL
ANS->  SELECT FIRST_NAME,SALARY,GRADE_LEVEL FROM EMPLOYEES
       JOIN JOBS USING(JOB_ID)
       JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL;

12 DISPLAY FIRST_NAME , JOB_TITLE
ANS->  SELECT FIRST_NAME , JOB_TITLE FROM EMPLOYEES
       JOIN JOBS USING(JOB_ID);

13 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME
ANS-> SELECT  FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME
      FROM EMPLOYEES
      INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
      INNER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID
      INNER JOIN COUNTRIES ON LOCATIONS.COUNTRY_ID =  COUNTRIES.COUNTRY_ID
      INNER JOIN REGIONS ON COUNTRIES.REGION_ID =  REGIONS.REGION_ID;

14 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME , SALARY , GRADE_LEVEL
ANS-> SELECT FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME , SALARY , GRADE_LEVEL
      FROM EMPLOYEES E
      JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
      JOIN LOCATIONS L ON L.LOCATION_ID=D.LOCATION_ID
      JOIN COUNTRIES C ON C.COUNTRY_ID =L.COUNTRY_ID
      JOIN REGIONS R ON R.REGION_ID=C.REGION_ID
      JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL;

15 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME , SALARY , GRADE_LEVEL , JOB_ID , JOB_TITLE
ANS->  SELECT FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME , SALARY,GRADE_LEVEL,J.JOB_ID,JOB_TITLE
       FROM EMPLOYEES E
       JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
       JOIN LOCATIONS L ON L.LOCATION_ID=D.LOCATION_ID
       JOIN COUNTRIES C ON C.COUNTRY_ID =L.COUNTRY_ID
       JOIN REGIONS R ON R.REGION_ID=C.REGION_ID
       JOIN JOBS J ON J.JOB_ID=E.JOB_ID
       JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL;
